const {LINT_CATEGORY, AIRBNB_CATEGORY} = require('../../lib/generator/constants');

const title = '단항 연산자가 문자일 때는 연산자와 피연산자 사이에 공백을 두고, 기호일 때는 공백을 두지 않는다.';

const rule = 'space-unary-ops';

const desc = null;

const options = [
  'error',
  {
    words: true,
    nonwords: false
  }
];

const cause = null;

const lintCategory = LINT_CATEGORY.STYLISTIC_ISSUES;

const airbnbCategory = AIRBNB_CATEGORY.WHITESPACE;

/* eslint-disable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */
/* eslint-disable space-unary-ops */
const bad = () => {
  typeof!foo;

  void{foo: 0};

  var bar = new[foo][0]();

  delete(foo.bar);

  ++ foo;

  foo --;

  - foo;

  + '3';
};
/* eslint-enable space-unary-ops */

const good = () => {
  delete foo.bar;

  var bar = new Foo();

  void 0;

  ++foo;

  foo--;

  -foo;

  +'3';
};

const best = null;
/* eslint-enable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best
};
