const {LINT_CATEGORY, AIRBNB_CATEGORY, ENV_FLAGS} = require('../../lib/generator/constants');

const title = 'debugger를 사용하지 않는다.';

const rule = 'no-debugger';

const desc = `로컬에서의 디버깅을 위해 process.env.${ENV_FLAGS.USE_LOCAL_LINT_RULE}="true" 로 지정된 경우에는 error가 아닌 warning으로 취급합니다.`;

// 1: warning, 2: error
const options = `process.env.${ENV_FLAGS.USE_LOCAL_LINT_RULE} === 'true' ? 1 : 2`;

const cause = '개발자의 실수로 코드에 남아있을 경우 어플리케이션의 동작을 멈출 수 있다.';

const lintCategory = LINT_CATEGORY.POSSIBLE_ERRORS;

const airbnbCategory = AIRBNB_CATEGORY.ETC;

/* eslint-disable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */
/* eslint-disable no-debugger */
const bad = () => {
  function isTruthy (x) {
    debugger;
    return Boolean(x);
  }
};
/* eslint-enable no-debugger */

const good = () => {
  function isTruthy (x) {
    return Boolean(x); // set a breakpoint at this line
  }
};

const best = null;
/* eslint-enable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best,
};
