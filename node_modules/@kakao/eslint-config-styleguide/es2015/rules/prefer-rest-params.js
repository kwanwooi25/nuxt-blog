const {LINT_CATEGORY, AIRBNB_CATEGORY} = require('../../lib/generator/constants');

const title = '가변 인자를 다룰 때 arguments 대신 rest 연산자를 사용한다.';

const rule = 'prefer-rest-params';

const desc = null;

const options = 'error';

const cause = null;

const lintCategory = LINT_CATEGORY.BEST_PRACTICES;

const airbnbCategory = AIRBNB_CATEGORY.FUNCTIONS;


/* eslint-disable no-unused-vars, no-undef, no-unused-expressions, no-redeclare */
/* eslint-disable prefer-rest-params, prefer-spread */
const bad = () => {
  function foo () {
    console.log(arguments);
  }

  function foo (action) {
    const args = Array.prototype.slice.call(arguments, 1);
    action.apply(null, args);
  }

  function foo (action) {
    const args = [].slice.call(arguments, 1);
    action.apply(null, args);
  }
};
/* eslint-enable prefer-rest-params, prefer-spread */

const good = () => {
  function foo (...args) {
    console.log(args);
  }

  function foo (action, ...args) {
    action(...args);
  }
};

const best = null;
/* eslint-enable no-unused-vars, no-undef, no-unused-expressions, no-redeclare */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best,
};
