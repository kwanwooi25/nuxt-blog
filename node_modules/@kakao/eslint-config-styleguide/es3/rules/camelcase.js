const {LINT_CATEGORY, AIRBNB_CATEGORY} = require('../../lib/generator/constants');

const title = '변수나 함수 이름 사용 시 카멜케이스(camelcase)를 사용한다.';

const rule = 'camelcase';

const desc = null;

const options = [
  'error',
  {
    properties: 'always'
  }
];

const cause = null;

const lintCategory = LINT_CATEGORY.STYLISTIC_ISSUES;

const airbnbCategory = AIRBNB_CATEGORY.NAMING_CONVENTIONS;

/* eslint-disable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */
/* eslint-disable camelcase */
const bad = () => {
  var my_favorite_color = '#112C85';

  function do_something () {
    // ...
  }

  obj.do_something = function () {
    // ...
  };

  function foo ({isCamelcased: no_camelcased}) {
    // ...
  }

  var obj = {
    my_pref: 1
  };
};
/* eslint-enable camelcase */

const good = () => {
  var myFavoriteColor = '#112C85';
  var _myFavoriteColor = '#112C85';
  var myFavoriteColor_ = '#112C85';
  var MY_FAVORITE_COLOR = '#112C85';
  var foo = bar.baz_boom;
  var foo = {qux: bar.baz_boom};

  obj.do_something(); // 외부에서 정의한 객체일 수 있기 때문에 선언이 아닌 사용은 가능
  do_something();
  var foo = new SomeClass();

  function foo ({isCamelCased: isAlsoCamelCased}) {
    // ...
  }
};

const best = null;
/* eslint-enable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best
};
