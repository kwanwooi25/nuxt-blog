const {LINT_CATEGORY, AIRBNB_CATEGORY} = require('../../lib/generator/constants');

const title = '중괄호 안에서 함수 선언문을 사용하지 않는다.';

const rule = 'no-inner-declarations';

const desc = null;

const options = [
  'error',
  'functions'
];

const cause = null;

const lintCategory = LINT_CATEGORY.POSSIBLE_ERRORS;

const airbnbCategory = AIRBNB_CATEGORY.FUNCTIONS;

/* eslint-disable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable, handle-callback-err */
/* eslint-disable no-inner-declarations */
const bad = () => {
  if (test) {
    function doSomething () { }
  }

  function doSomethingElse () {
    if (test) {
      function doAnotherThing () { }
    }
  }
};
/* eslint-enable no-inner-declarations */

const good = () => {
  function doSomething () { }

  function doSomethingElse () {
    function doAnotherThing () { }
  }

  if (test) {
    asyncCall(id, function (err, data) { });
  }

  var fn;
  if (test) {
    fn = function fnExpression () { };
  }
};

const best = null;
/* eslint-enable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable, handle-callback-err */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best
};
