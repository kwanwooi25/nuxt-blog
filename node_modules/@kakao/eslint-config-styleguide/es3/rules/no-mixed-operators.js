const {LINT_CATEGORY, AIRBNB_CATEGORY} = require('../../lib/generator/constants');

const title = '연산자를 섞어 사용할 때 같은 연산자들을 괄호로 감싼다.';

const rule = 'no-mixed-operators';

const desc = `단, 다음 목록에서 같은 줄에 있는 연산자들은 섞어서 사용해도 괄호로 묶지 않는다.
  - ===, !==, >, >=, <, <=
  - &&, ||
  - in, instanceof`;

const options = [
  'error',
  {
    groups: [
      [
        '===',
        '!==',
        '>',
        '>=',
        '<',
        '<='
      ],
      [
        '&&',
        '||'
      ],
      [
        'in',
        'instanceof'
      ]
    ],
    allowSamePrecedence: true
  }
];

const cause = null;

const lintCategory = LINT_CATEGORY.STYLISTIC_ISSUES;

const airbnbCategory = AIRBNB_CATEGORY.COMPARISON_OPERATORS_N_EQUALITY;

/* eslint-disable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */
/* eslint-disable no-mixed-operators */
const bad = () => {
  var foo = a && b < 0 || c > 0 || d + 1 === 0;
  var foo = a + b * c;
};
/* eslint-enable no-mixed-operators */

const good = () => {
  var foo = a || b || c;
  var foo = a && b && c;
  var foo = (a && b < 0) || c > 0 || d + 1 === 0;
  var foo = a && (b < 0 || c > 0 || d + 1 === 0);
  var foo = a + (b * c);
  var foo = (a + b) * c;
};

const best = null;
/* eslint-enable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best
};
