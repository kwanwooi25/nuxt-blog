const {LINT_CATEGORY, AIRBNB_CATEGORY} = require('../../lib/generator/constants');

const title = 'finally에는 흐름을 제어할 수 있는 명령문이 없어야 한다.';

const rule = 'no-unsafe-finally';

const desc = null;

const options = 'error';

const cause = 'finally 의 제어문이 try / catch 절의 제어문을 덮어쓰게 된다.';

const lintCategory = LINT_CATEGORY.POSSIBLE_ERRORS;

const airbnbCategory = AIRBNB_CATEGORY.ERRORS;

/* eslint-disable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */
/* eslint-disable no-unsafe-finally */
const bad = () => {
  var foo = function () {
    try {
      return 1;
    } catch (err) {
      return 2;
    } finally {
      return 3;
    }
  };
};
/* eslint-enable no-unsafe-finally */

const good = () => {
  var foo = function () {
    try {
      return 1;
    } catch (err) {
      return 2;
    } finally {
      console.log('hola!');
    }
  };
};

const best = null;
/* eslint-enable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best
};
