module.exports = {
  rules: {
    'no-delete-var': 'error',
    'no-undef': 'error',
    'no-undef-init': 'error',
    'no-unused-vars': [
      'error',
      {
        vars: 'all',
        args: 'none',
        ignoreRestSiblings: true
      }
    ],
    'no-shadow-restricted-names': 'error',
    'no-multi-assign': 'error',
    'one-var': [
      'error',
      'never'
    ],
    'operator-linebreak': [
      'error',
      'after',
      {
        overrides: {
          '?': 'before',
          ':': 'before'
        }
      }
    ],
    camelcase: [
      'error',
      {
        properties: 'always'
      }
    ],
    'new-cap': [
      'error',
      {
        newIsCap: true,
        capIsNew: true
      }
    ],
    'block-spacing': [
      'error',
      'always'
    ],
    'comma-spacing': [
      'error',
      {
        before: false,
        after: true
      }
    ],
    'eol-last': [
      'error',
      'always'
    ],
    'func-call-spacing': [
      'error',
      'never'
    ],
    indent: [
      'error',
      2,
      {
        SwitchCase: 1,
        VariableDeclarator: 1,
        outerIIFEBody: 1,
        MemberExpression: 1,
        FunctionDeclaration: {
          parameters: 1,
          body: 1
        },
        FunctionExpression: {
          parameters: 1,
          body: 1
        },
        CallExpression: {
          arguments: 1
        },
        ArrayExpression: 1,
        ObjectExpression: 1,
        flatTernaryExpressions: false,
        ignoreComments: false
      }
    ],
    'key-spacing': [
      'error',
      {
        beforeColon: false,
        afterColon: true
      }
    ],
    'keyword-spacing': [
      'error',
      {
        before: true,
        after: true
      }
    ],
    'max-len': [
      'error',
      {
        code: 120,
        ignoreComments: true,
        ignoreTrailingComments: true,
        ignoreUrls: true,
        ignoreStrings: true,
        ignoreTemplateLiterals: true,
        ignoreRegExpLiterals: true
      }
    ],
    'no-multiple-empty-lines': [
      'error',
      {
        max: 2,
        maxEOF: 1
      }
    ],
    'no-tabs': 'error',
    'no-trailing-spaces': 'error',
    'no-whitespace-before-property': 'error',
    'object-curly-spacing': [
      'error',
      'never'
    ],
    'semi-spacing': 'error',
    'space-before-blocks': 'error',
    'space-before-function-paren': [
      'error',
      'always'
    ],
    'space-in-parens': 'error',
    'space-infix-ops': 'error',
    'space-unary-ops': [
      'error',
      {
        words: true,
        nonwords: false
      }
    ],
    'spaced-comment': [
      'error',
      'always',
      {
        line: {
          markers: [
            '*package',
            '!',
            '/',
            ',',
            '='
          ]
        },
        block: {
          balanced: true,
          markers: [
            '*package',
            '!',
            ',',
            ':',
            '::',
            'flow-include'
          ],
          exceptions: [
            '*'
          ]
        }
      }
    ],
    'brace-style': [
      'error',
      '1tbs',
      {
        allowSingleLine: true
      }
    ],
    'nonblock-statement-body-position': [
      'error',
      'beside',
      {
        overrides: {}
      }
    ],
    'padded-blocks': [
      'error',
      'never'
    ],
    'comma-dangle': [
      'error',
      'never'
    ],
    'comma-style': [
      'error',
      'last'
    ],
    'new-parens': 'error',
    'no-new-object': 'error',
    'object-property-newline': [
      'error',
      {
        allowAllPropertiesOnSameLine: true
      }
    ],
    'quote-props': [
      'error',
      'as-needed',
      {
        keywords: false,
        unnecessary: true,
        numbers: false
      }
    ],
    quotes: [
      'error',
      'single',
      {
        avoidEscape: true,
        allowTemplateLiterals: true
      }
    ],
    'unicode-bom': 'error',
    'no-array-constructor': 'error',
    'no-mixed-operators': [
      'error',
      {
        groups: [
          [
            '===',
            '!==',
            '>',
            '>=',
            '<',
            '<='
          ],
          [
            '&&',
            '||'
          ],
          [
            'in',
            'instanceof'
          ]
        ],
        allowSamePrecedence: true
      }
    ],
    'no-unneeded-ternary': [
      'error',
      {
        defaultAssignment: false
      }
    ],
    'multiline-comment-style': [
      'error',
      'starred-block'
    ],
    semi: [
      'error',
      'always'
    ],
    'no-extra-boolean-cast': 'error',
    'no-irregular-whitespace': 'error',
    'no-dupe-keys': 'error',
    'no-prototype-builtins': 'error',
    'no-dupe-args': 'error',
    'no-inner-declarations': [
      'error',
      'functions'
    ],
    'no-obj-calls': 'error',
    'no-sparse-arrays': 'error',
    'no-control-regex': 'error',
    'no-empty-character-class': 'error',
    'no-invalid-regexp': 'error',
    'no-regex-spaces': 'error',
    'no-constant-condition': [
      'error',
      {
        checkLoops: false
      }
    ],
    'no-duplicate-case': 'error',
    'no-unreachable': 'error',
    'no-compare-neg-zero': 'error',
    'no-unsafe-negation': 'error',
    'use-isnan': 'error',
    'valid-typeof': [
      'error',
      {
        requireStringLiterals: true
      }
    ],
    'no-ex-assign': 'error',
    'no-unsafe-finally': 'error',
    'no-debugger': process.env.USE_LOCAL_LINT_RULE === 'true' ? 1 : 2,
    'no-extra-parens': [
      'error',
      'functions'
    ],
    'no-floating-decimal': 'error',
    'no-octal': 'error',
    'no-octal-escape': 'error',
    'no-new-wrappers': 'error',
    'no-redeclare': 'error',
    'no-self-assign': 'error',
    'no-global-assign': 'error',
    'no-multi-spaces': 'error',
    'no-lone-blocks': 'error',
    'no-sequences': 'error',
    'no-extend-native': 'error',
    'no-new': 'error',
    'no-proto': 'error',
    'dot-location': [
      'error',
      'property'
    ],
    'dot-notation': 'error',
    'no-caller': 'error',
    'no-extra-bind': 'error',
    'no-func-assign': 'error',
    'no-new-func': 'error',
    'no-param-reassign': 'error',
    'no-return-assign': 'error',
    'no-useless-call': 'error',
    'no-useless-return': 'error',
    'wrap-iife': [
      'error',
      'any',
      {
        functionPrototypeMethods: true
      }
    ],
    'no-multi-str': 'error',
    'no-useless-escape': 'error',
    'default-case': 'error',
    'no-cond-assign': 'error',
    'no-fallthrough': 'error',
    'no-unmodified-loop-condition': 'error',
    eqeqeq: [
      'error',
      'always'
    ],
    'no-self-compare': 'error',
    yoda: 'error',
    'handle-callback-err': [
      'error',
      '^[\\S]*(e|E)rr(or)?$'
    ],
    'no-throw-literal': 'error',
    'no-eval': 'error',
    'no-implied-eval': 'error',
    'no-labels': 'error',
    'no-magic-numbers': [
      'warn',
      {
        ignore: [
          -1,
          0,
          1,
          2
        ]
      }
    ],
    'no-unused-expressions': [
      'error',
      {
        allowShortCircuit: true,
        allowTernary: true,
        allowTaggedTemplates: true
      }
    ],
    'no-with': 'error'
  }
};
