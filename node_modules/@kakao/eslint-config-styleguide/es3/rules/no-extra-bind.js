const {LINT_CATEGORY, AIRBNB_CATEGORY} = require('../../lib/generator/constants');

const title = '불필요한 함수 바인딩을 피한다.';

const rule = 'no-extra-bind';

const desc = null;

const options = 'error';

const cause = null;

const lintCategory = LINT_CATEGORY.BEST_PRACTICES;

const airbnbCategory = AIRBNB_CATEGORY.FUNCTIONS;

/* eslint-disable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */
/* eslint-disable no-extra-bind */
const bad = () => {
  var x = function () {
    foo();
  }.bind(bar);

  var x = function () {
    (function () {
      this.foo();
    }());
  }.bind(bar);

  var x = function () {
    function foo () {
      this.bar();
    }
  }.bind(baz);
};
/* eslint-enable no-extra-bind */

const good = () => {
  var x = function () {
    this.foo();
  }.bind(bar);

  var x = function (a) {
    return a + 1;
  }.bind(foo, bar);
};

const best = null;
/* eslint-enable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best
};
