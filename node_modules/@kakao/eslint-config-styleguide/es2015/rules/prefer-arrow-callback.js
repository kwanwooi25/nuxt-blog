const {LINT_CATEGORY, AIRBNB_CATEGORY} = require('../../lib/generator/constants');

const title = '함수 표현식 대신 화살표 함수를 사용한다.';

const rule = 'prefer-arrow-callback';

const desc = null;

const options = 'error';

const cause = null;

const lintCategory = LINT_CATEGORY.BEST_PRACTICES;

const airbnbCategory = AIRBNB_CATEGORY.ARROW_FUNCTIONS;


/* eslint-disable no-unused-vars, no-undef, no-unused-expressions, no-redeclare */
const bad = () => {
  foo(a => a); // ERROR
  // prefer: foo(a => a)

  foo(() => this.a); // ERROR
  // prefer: foo(() => this.a)
};

const good = () => {
  foo(a => a); // OK

  foo(function* () { yield; }); // OK

  const foo = function foo (a) { return a; }; // OK

  foo(function () { return this.a; }); // OK

  foo(function bar (n) { return n && n + bar(n - 1); }); // OK
};

const best = null;
/* eslint-enable no-unused-vars, no-undef, no-unused-expressions, no-redeclare */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best,
};
