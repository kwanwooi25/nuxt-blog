const {LINT_CATEGORY, AIRBNB_CATEGORY} = require('../../lib/generator/constants');

const title = '불필요한 return 문을 사용하지 않는다.';

const rule = 'no-useless-return';

const desc = null;

const options = 'error';

const cause = null;

const lintCategory = LINT_CATEGORY.BEST_PRACTICES;

const airbnbCategory = AIRBNB_CATEGORY.FUNCTIONS;

/* eslint-disable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */
/* eslint-disable no-useless-return */
const bad = () => {
  function foo () { }

  function foo () {
    doSomething();
  }

  function foo () {
    if (condition) {
      bar();
    } else {
      baz();
    }
  }

  function foo () {
    switch (bar) {
      case 1:
        doSomething();
        break;

      default:
        doSomethingElse();
        return;
    }
  }
};
/* eslint-enable no-useless-return */

const good = () => {
  function foo () { return 5; }

  function foo () {
    return doSomething();
  }

  function foo () {
    if (condition) {
      bar();
      return;
    } else {
      baz();
    }
    qux();
  }

  function foo () {
    switch (bar) {
      case 1:
        doSomething();
        return;
      default:
        doSomethingElse();
    }
  }

  function foo () {
    for (const foo of bar) {
      return;
    }
  }
};

const best = null;
/* eslint-enable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best
};
