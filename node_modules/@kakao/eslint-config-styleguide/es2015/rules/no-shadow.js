const {
  LINT_CATEGORY,
  AIRBNB_CATEGORY,
} = require('../../lib/generator/constants');

const title =
  '중첩된 scope에서 같은 이름을 사용해서 바깥 scope의 이름을 가리지 않는다.';

const rule = 'no-shadow';

const desc = '';

const options = 'error';

const cause = '의도하지 않은 변수 참조/수정에 따른 버그를 사전에 방지';

const lintCategory = LINT_CATEGORY.VARIABLES;

const airbnbCategory = AIRBNB_CATEGORY.VARIABLES;

/* eslint-disable no-unused-vars, no-undef, no-unused-expressions, no-redeclare, no-param-reassign, no-magic-numbers, no-constant-condition */
/* eslint-disable no-shadow */
const bad = () => {
  const a = 3;
  function b () {
    const a = 10;
  }

  const c = function () {
    const a = 10;
  };

  function d (a) {
    a = 10;
  }
  b(a);

  if (true) {
    const a = 5;
  }
};
/* eslint-enable no-return-await */

const good = () => {
  const xList = [
    /* ... */
  ];
  const yList = [
    /* ... */
  ];

  for (let xIndex = 0; xIndex <= xList.length; xIndex++) {
    for (let yIndex = 0; yIndex <= yList.length; yIndex++) {
      // 중첩된 scope에서 xIndex와 yIndex 처럼 변수 값을 다르게 해서 실수를 방지
    }
  }
};

const best = null;
/* eslint-enable no-unused-vars, no-undef, no-unused-expressions, no-redeclare */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best,
};
