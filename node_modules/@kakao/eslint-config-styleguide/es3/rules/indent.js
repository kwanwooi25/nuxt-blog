const {LINT_CATEGORY, AIRBNB_CATEGORY} = require('../../lib/generator/constants');

const title = '들여쓰기는 space 2문자(2칸 들여쓰기)를 사용한다.';

const rule = 'indent';

const desc = null;

const options = [
  'error',
  2,
  {
    SwitchCase: 1,
    VariableDeclarator: 1,
    outerIIFEBody: 1,
    MemberExpression: 1,
    FunctionDeclaration: {
      parameters: 1,
      body: 1
    },
    FunctionExpression: {
      parameters: 1,
      body: 1
    },
    CallExpression: {
      arguments: 1
    },
    ArrayExpression: 1,
    ObjectExpression: 1,
    flatTernaryExpressions: false,
    ignoreComments: false
  }
];

const cause = null;

const lintCategory = LINT_CATEGORY.STYLISTIC_ISSUES;

const airbnbCategory = AIRBNB_CATEGORY.WHITESPACE;

/* eslint-disable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */
/* eslint-disable indent */
const bad = () => {
  switch (a) {
      case 'a':
          break;
      case 'b':
          break;
  }

  (function () {
  function foo (x) {
    return x + 1;
  }
  })();

  foo
  .bar
  .baz();

  foo(bar,
    baz,
      qux
  );

  var foo = [
    bar,
  baz,
    qux
  ];

  if (foo) {
    doSomething();

  // comment intentionally de-indented
    doSomethingElse();
  }
};
/* eslint-enable indent */

const good = () => {
  switch (a) {
    case 'a':
      break;
    case 'b':
      break;
  }

  (function () {
    function foo (x) {
      return x + 1;
    }
  })();

  foo
    .bar
    .baz();

  foo(bar,
    baz,
    qux
  );

  var foo = [
    bar,
    baz,
    qux
  ];

  if (foo) {
    doSomething();

    // comment intentionally de-indented
    doSomethingElse();
  }
};

const best = null;
/* eslint-enable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best
};
