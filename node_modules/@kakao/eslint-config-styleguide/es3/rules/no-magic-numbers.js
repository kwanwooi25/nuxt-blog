const {LINT_CATEGORY, AIRBNB_CATEGORY} = require('../../lib/generator/constants');

const title = '의미를 바로 알 수 없는 상수의 사용을 지양한다.';

const rule = 'no-magic-numbers';

const desc = `에러가 아닌 **경고**로 표시하는 규칙이다. 따라서 수정할 필요가 없다고 판단되는 경우 무시할 수 있다.  
많이 사용되는 네 가지 숫자 -1, 0, 1, 2 는 아래 이유 때문에 허용한다.
  - -1: Array.prototype.indexOf 등 많이 사용되는 몇몇 함수의 경우 없는 값을 표현하기 위해 -1을 반환
  - 0: 배열이 비어있는지 확인하거나 반복문에서 사용하는 변수의 초기값 등에서 많이 사용
  - 1: 반복문의 종료 조건이나 최소값 등의 표현에서 많이 사용
  - 2: 값을 절반으로 나누는 표현 등 계산식에서 많이 사용`;

const options = [
  'warn',
  {
    ignore: [
      -1,
      0,
      1,
      2
    ]
  }
];

const cause = '의미를 바로 알 수 없는 상수를 사용하면 코드 가독성이 떨어지고, 수정이 어려워진다.';

const lintCategory = LINT_CATEGORY.BEST_PRACTICES;

const airbnbCategory = AIRBNB_CATEGORY.ETC;

/* eslint-disable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */
/* eslint-disable no-magic-numbers */
const bad = () => {
  var dutyFreePrice = 100;
  var finalPrice = dutyFreePrice + (dutyFreePrice * 0.25);

  var data = ['foo', 'bar', 'baz', 'rem'];
  var dataLast = data[3];
};
/* eslint-enable no-magic-numbers */

const good = () => {
  var TAX = 0.25;

  var dutyFreePrice = 100;
  var finalPrice = dutyFreePrice + (dutyFreePrice * TAX);

  function isEmptyArray (arr) {
    return arr.length === 0;
  }
};

const best = null;
/* eslint-enable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best
};
