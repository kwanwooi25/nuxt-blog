const {LINT_CATEGORY, AIRBNB_CATEGORY} = require('../../lib/generator/constants');

const title = '불필요한 call(), apply() 를 사용하지 않는다.';

const rule = 'no-useless-call';

const desc = null;

const options = 'error';

const cause = null;

const lintCategory = LINT_CATEGORY.BEST_PRACTICES;

const airbnbCategory = AIRBNB_CATEGORY.FUNCTIONS;

/* eslint-disable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */
/* eslint-disable no-useless-call */
const bad = () => {
  foo.call(undefined, 1, 2, 3);
  foo.apply(undefined, [1, 2, 3]);
  foo.call(null, 1, 2, 3);
  foo.apply(null, [1, 2, 3]);

  obj.foo.call(obj, 1, 2, 3);
  obj.foo.apply(obj, [1, 2, 3]);
};
/* eslint-enable no-useless-call */

const good = () => {
  // this 바인딩이 달라짐
  foo.call(obj, 1, 2, 3);
  foo.apply(obj, [1, 2, 3]);
  obj.foo.call(null, 1, 2, 3);
  obj.foo.apply(null, [1, 2, 3]);
  obj.foo.call(otherObj, 1, 2, 3);
  obj.foo.apply(otherObj, [1, 2, 3]);

  // 매개변수를 배열로 전달할 때
  foo.apply(undefined, args);
  foo.apply(null, args);
  obj.foo.apply(obj, args);
};

const best = null;
/* eslint-enable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best
};
