const {LINT_CATEGORY, AIRBNB_CATEGORY} = require('../../lib/generator/constants');

const title = 'return, throw, continue, break 문 다음 실행 코드는 작성하지 않는다.';

const rule = 'no-unreachable';

const desc = null;

const options = 'error';

const cause = null;

const lintCategory = LINT_CATEGORY.POSSIBLE_ERRORS;

const airbnbCategory = AIRBNB_CATEGORY.CONTROL_STATEMENTS;

/* eslint-disable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */
/* eslint-disable no-unreachable */
const bad = () => {
  function foo () {
    return true;
    console.log('done');
  }

  function bar () {
    throw new Error('Oops!');
    console.log('done');
  }

  while (value) {
    break;
    console.log('done');
  }

  throw new Error('Oops!');
  console.log('done');

  function baz () {
    if (Math.random() < 0.5) {
      return;
    } else {
      throw new Error();
    }
    console.log('done');
  }

  for (;;) {}
  console.log('done');
};
/* eslint-enable no-unreachable */

const good = null;

const best = null;
/* eslint-enable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best
};
