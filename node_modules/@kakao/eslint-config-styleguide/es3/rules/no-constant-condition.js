const {LINT_CATEGORY, AIRBNB_CATEGORY} = require('../../lib/generator/constants');

const title = '상수를 조건문에 사용하지 않는다.';

const rule = 'no-constant-condition';

const desc = '단, 반복문 안에서 조건에 따른 종료가 명시돼 있으면 사용 가능하다.';

const options = [
  'error',
  {
    checkLoops: false
  }
];

const cause = null;

const lintCategory = LINT_CATEGORY.POSSIBLE_ERRORS;

const airbnbCategory = AIRBNB_CATEGORY.CONTROL_STATEMENTS;

/* eslint-disable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */
/* eslint-disable no-constant-condition */
const bad = () => {
  if (false) {
    doSomethingUnfinished();
  }

  if (void x) {
    doSomethingUnfinished();
  }

  for (;-2;) {
    doSomethingForever();
  }

  while (typeof x) {
    doSomethingForever();
  }

  do {
    doSomethingForever();
  } while (x = -1);

  var result = 0 ? a : b;
};
/* eslint-enable no-constant-condition */

const good = () => {
  if (foo) {
    doSomethingUnfinished();
  }

  do {
    doSomethingForever();
  } while (x === -1);

  while (true) {
    doSomething();
    if (condition()) {
      break;
    }
  }

  for (; true;) {
    doSomething();
    if (condition()) {
      break;
    }
  }

  do {
    doSomething();
    if (condition()) {
      break;
    }
  } while (true);
};

const best = null;
/* eslint-enable no-undef, no-unused-vars, no-redeclare, no-magic-numbers, no-unused-expressions, no-self-compare, no-cond-assign, default-case, no-unreachable */

module.exports = {
  title,
  rule,
  options,
  desc,
  cause,
  lintCategory,
  airbnbCategory,
  bad,
  good,
  best
};
